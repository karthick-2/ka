{"version":3,"sources":["components/Landing.js","components/Burger.js","components/Header.js","components/Order.js","components/AddBurgerForm.js","components/EditBurgerForm.js","actions/currentUser.js","components/Logout.js","components/MenuAdmin.js","actions/getBurgers.js","actions/createBurger.js","components/Login.js","actions/loginForm.js","components/LoginUser.js","components/App.js","components/NotFound.js","components/Router.js","reducers/loginForm.js","store.js","reducers/users.js","reducers/currentUser.js","index.js"],"names":["Landing","state","ourRestaurants","display","title","url","displayList","setState","getTitle","restaurant","goToRestaurant","props","history","push","className","onClick","this","map","id","dispay","fetch","then","response","json","data","React","Component","Burger","handleClick","addToOrder","index","isAvalable","status","src","image","alt","name","price","description","disabled","Header","Order","renderOrder","key","burger","burgers","count","order","deleteFromOrder","orderIds","Object","keys","total","reduce","prevTotal","AddBurgerForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","current","value","parseFloat","addBurger","currentTarget","reset","onSubmit","ref","type","placeholder","autoComplete","EditBurgerForm","handleChange","updatedBurger","updateBurger","onChange","setCurrentUser","user","connect","logout","dispatch","credentials","method","MenuAdmin","GetBurgers","fetchBurgers","r","CreateBurger","postBurger","request","body","JSON","stringify","headers","loginFormData","loginForm","updateLoginForm","formData","login","console","log","error","alert","catch","handleInputChange","target","updatedFormInfo","username","password","loginUser","getCurrentUser","currentUser","children","App","concat","LoginUser","NotFound","Router","exact","path","component","initialState","reducer","combineReducers","users","action","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","render","document","querySelector"],"mappings":"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","file":"static/js/main.67f2ff7e.chunk.js","sourcesContent":["import React from 'react';\n\n\n\n\n\nclass Landing extends React.Component {\n  \n\nstate = {\n  ourRestaurants: [],\n  display: false,\n  title: '',\n  url: ''\n};\n\ndisplayList = () => {\n  const { display } = this.state;\n  this.setState({ display: !display });\n};\n\ngetTitle = (restaurant) => {\n  const {title, url} = restaurant;\n  this.setState({ title, url, display: false });\n};\n\ngoToRestaurant = () => {\n \n  const { url } = this.state;\n \n  this.props.history.push(`/restaurant/${url}`)\n}\n\n\nrender() {\n  return (\n    <div className='restaurant_select'>\n      <div className='restaurant_select_top'>\n        \n        <div onClick={this.displayList}\n        className='restaurant_select_top-header font-effect-outline'>\n          {this.state.title ? this.state.title : 'Choose a restaurant'}\n          </div>\n        \n          <div className='arrow_picker'>\n            <div className='arrow_picker-up'></div>\n            <div className='arrow_picker-down'></div>\n          </div> \n      </div>\n\n      {this.state.display ? (<div className='restaurant_select_bottom'>\n        <ul>\n          {this.state.ourRestaurants.map(restaurant => {\n            return <li onClick={() => this.getTitle(restaurant)} key={restaurant.id}>{restaurant.title}</li>;\n            })}\n        </ul>\n      </div>) : null}\n      {this.state.title && !this.state.dispay ? (<button onClick={this.goToRestaurant}> Go to the restaurant</button>) : null}\n      </div>\n    \n    \n  );\n}\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/v1/restaurants')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          ourRestaurants: data\n        })\n      })\n  }\n}\n\n\nexport default Landing;","import React from 'react';\n\nclass Burger extends React.Component {\n  handleClick = () => {\n    this.props.addToOrder(this.props.index)\n  }\n  render() {\n    const isAvalable = this.props.status === 'available'\n    return <li className='menu-burger'>\n      <div className='image-container'>\n        <img src={this.props.image}  \n        alt={this.props.name}/>\n      </div>\n      <div className='burger-details'>\n        <h3 className='burger-name'>{this.props.name}\n        <span className='price'>💲{this.props.price}</span>\n        </h3>\n        <p>{this.props.description}</p>\n        <button \n        className='buttonOrder'\n        disabled={!isAvalable}\n        onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvalable ? '+Add' : 'Temporary not available'}\n          </button>\n      </div>\n   \n    </li>\n  }\n}\nexport default Burger;","// functional componet\nimport React from 'react';\nimport PropTypes from 'prop-types'\n\n\n\nconst Header = props => (\n\n<header className='top'>\n  <div className='wrap'>\n    <div className='header-content>'>\n      <div className='header-rating'>\n        <div className='header-rating_tag'></div>\n        <div className='header-rating_icon'>+++</div>\n      </div>\n\n      <div className='header-divider'>{props.title}</div>\n      <h1 className='font-effect-fire-animation'>Burger Hub</h1>\n      <span>\n        Best burger in \n        <span className='sub-header'>#Brooklyn</span>\n      </span>\n    </div>\n  </div>\n</header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n  }\nexport default  Header;","import React from 'react';\n\n\nclass Order extends React.Component {\n\n  renderOrder = (key) => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n\n    const isAvailable = burger && burger.status === 'available';\n      if (!isAvailable) {\n        return (\n        <li className='unavalable' key={key}>\n          Sorry, {burger ? burger.name : 'burger'} temporary sold out\n        </li>\n        );\n      }\n\n    return( \n    <li key={key}>\n      <span>\n        <span>{count}</span>\n        item: {burger.name}\n        <span>${count * burger.price}</span>\n        <button \n          onClick={() => this.props.deleteFromOrder(key)}\n          className='cancelItem'\n          >\n            &times;\n        </button>\n      </span>\n    </li>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order)\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n\n      const isAvailable = burger && burger.status ==='available';\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal \n    }, 0);\n\n    return (\n     <div className='order-wrap'>\n        <h2>Your Order</h2>\n        <ul className='order'>\n          {orderIds.map(this.renderOrder)} \n        </ul>\n        <div className='total'>\n          <div className='total_wrap'>\n            <div className='total_wrap-final'>\n              Total: $ {total}\n            </div>\n          </div>\n        </div>\n     </div>\n    );\n  }\n}\nexport default Order;","// container component\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddBurgerForm extends React.Component {\n  \n  static propTypes = {\n    addBurger: PropTypes.func\n  };\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createBurger = event => {\n    event.preventDefault();\n    const burger = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value || 0),\n      status: this.statusRef.current.value,\n      description: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addBurger(burger);\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className='burger-edit' onSubmit={this.createBurger}>\n        <input\n          ref={this.nameRef}\n          name='name'\n          type='text'\n          placeholder='Name'\n          autoComplete='off'\n        />\n        <input\n          ref={this.priceRef}\n          name='price'\n          type='text'\n          placeholder='Price'\n          autoComplete='off'\n        />\n        <select ref={this.statusRef} name='status' className='status'>\n          <option value='available'>Available</option>\n          <option value='unavailable'>Delete From the Menu</option>\n        </select>\n        <textarea ref={this.descRef} name='desc' placeholder='Desc' />\n        <input\n          ref={this.imageRef}\n          name='image'\n          type='text'\n          placeholder='Image'\n          autoComplete='off'\n        />\n        <button type='submit'>+ Add to Menu</button>\n      </form>\n    );\n  }\n}\nexport default AddBurgerForm; ","import React from 'react';\n\nclass EditBurgerForm extends React.Component {\nhandleChange = event => {\n  \n  const updatedBurger = {\n    ...this.props.burger,\n    [event.currentTarget.name]: event.currentTarget.value\n   \n  };\n  this.props.updateBurger(this.props.index, updatedBurger)\n};\n\n  render () {\n    return (\n      <div className='burger-edit'>\n        <input \n          onChange={this.handleChange}\n          name ='name' \n          type = 'text' \n          value={this.props.name}\n        />\n        <input \n          onChange={this.handleChange}\n          name ='price' \n          type ='text' \n          value={this.props.price}\n        />\n        <select \n          onChange={this.handleChange}\n          name = 'status' \n          className='status' \n          value={this.props.status}\n        > \n          <option value ='available'>Available</option>\n          <option value ='unavailable'>Sold out</option>\n        </select>\n        <textarea \n        onChange={this.handleChange}\n        name = 'description' value={this.props.description} />\n        <input \n         onChange={this.handleChange}\n         name = 'image' type='text' value={this.props.image} />\n      </div>\n    )\n  }\n}\n\nexport default EditBurgerForm; ","export const setCurrentUser = user => {\n  return {\n    type: \"SET_CURRENT_USER\",\n    user\n  }\n}\n\n// asynchtonous action creators\nexport const login = credentials => {\n  console.log(\"credentials are\", credentials)\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/login\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(r => r.json())\n      .then( user => {\n        if (user.error) {\n          alert(user.error)\n        } else {\n          dispatch(setCurrentUser(user))\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const clearCurrentUser = () => {\n  return {\n    type: \"CLEAR_CURRENT_USER\"\n  }\n}\n\nexport const logout = () => {\n  return dispatch => {\n    dispatch(clearCurrentUser())\n    return fetch('http://localhost:3000/api/v1/logout', {\n      credentials: \"include\",\n      method: \"DELETE\"\n    })\n  }\n}\n\nexport const getCurrentUser = () => {\n  console.log(\"Dispatching get current user\")\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/get_current_user\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n    .then(r => r.json())\n    .then(user => {\n      if (user.error) {\n        alert(user.error)\n      } else {\n        dispatch(setCurrentUser(user))\n      }\n    })\n    .catch(console.log)\n  }\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from \"../actions/currentUser.js\";\n\nconst Logout = ({ logout }) => {\n\n  return (\n    <form onSubmit={logout}>\n      <input className='buttonLogout' type=\"submit\" value=\"Log Out\"/>\n    </form>\n    \n  )\n}\n\nexport default connect(null, { logout })(Logout)\n\n//  To understand redux , and build this action I need :\n//  1. action (creator)\n// 2. another case statement in my currentUser reducer\n","import React from 'react';\nimport AddBurgerForm from '../components/AddBurgerForm';\nimport EditBurgerForm from './EditBurgerForm';\nimport Logout from './Logout'\n\n\nclass MenuAdmin extends React.Component {\n  render() {\n    return ( \n      \n    <div className='menu-admin'>\n      <div className='login-header'>\n        <div className='avatar'>\n          <img src='/images/panda1.jpg' alt='avatar'/>\n        </div>\n        <Logout/>\n      </div>\n      <h2>Menu Control</h2>\n     \n       {this.props.burgers.map(burger => {\n         return (\n         <EditBurgerForm \n              key={burger.id}\n              index={burger.id}\n              name={burger.name}\n              price={burger.price}\n              description={burger.description}\n              status={burger.status}\n              image={burger.image}\n              burger={burger}\n            updateBurger={this.props.updateBurger}\n          />\n          );\n       })}\n      \n      <AddBurgerForm addBurger={this.props.addBurger}/>\n      {/* <button onClick={this.props.loadBurgers}>Load Burgers</button> */}\n\n    </div>\n    )\n  }\n}\n\nexport default MenuAdmin;\n","const GetBurgers = {\n  fetchBurgers () {\n    return fetch('http://localhost:3000/api/v1/restaurants/1/burgers')\n    .then(r => r.json())\n\n  }\n}\n\nexport default GetBurgers;","const CreateBurger = {\n  postBurger(burger) {\n   const request = {\n      method: 'POST',\n      body: JSON.stringify({\n        burger: burger\n      }),\n       headers: {\n          'Content-Type': 'application/json',\n       }\n    };\n    return fetch('http://localhost:3000/api/v1/restaurants/1/burgers', request) \n    .then(response => response.json())\n  }\n}\n\nexport default CreateBurger;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateLoginForm } from \"../actions/loginForm.js\"\nimport { login } from \"../actions/currentUser.js\"\n\n\nconst Login = ({ loginFormData, updateLoginForm, login, history }) => {\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n    const updatedFormInfo = {\n      ...loginFormData,\n      [name]: value\n    }\n    updateLoginForm(updatedFormInfo)\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    login(loginFormData, history)\n  }\n\n  return (\n    \n      <div className='login-container'>\n         <nav className= 'login'>\n          <form onSubmit={handleSubmit}>\n        \n            <h2>LOGIN</h2>\n            <p>Enter you Username and Password</p>\n            \n              <input placeholder=\"username\" value={loginFormData.username} name=\"username\" type=\"text\" onChange={handleInputChange} />\n              <input placeholder=\"password\" value={loginFormData.password} name=\"password\" type=\"text\" onChange={handleInputChange} />\n              \n        \n          <button className ='login'>Enter</button>\n        \n        </form>\n        </nav>\n      </div>\n      \n    // </form>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginFormData: state.loginForm\n  }\n}\n\n// review this part again video 3, 53 minute.\nexport default connect(mapStateToProps, { updateLoginForm, login })(Login)","export const updateLoginForm = formData => {\n  return {\n    type: \"UPDATE_LOGIN_FORM\",\n    formData\n  }\n}","import React from 'react';\nimport Login from \"./Login.js\";\nimport Logout from \"./Logout.js\";\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from \"../actions/currentUser.js\";\n\n\n\n\nclass loginUser extends React.Component {\n\n  componentDidMount(){\n    this.props.getCurrentUser()\n  }\n\n  render () {\n\n    \n    return (\n    \n      this.props.currentUser ? (<Logout/> && this.props.children) : <Login/> \n     \n    );\n  }\n}\n\nconst mapStateToProps = ({ currentUser}) => {\n  return {\n    currentUser  //currentUser from redux\n  }\n}\n\nexport default connect (mapStateToProps, { getCurrentUser })(loginUser);","import React from 'react';\nimport Burger from './Burger';\nimport Header from './Header';\nimport Order from './Order';\nimport MenuAdmin from './MenuAdmin';\nimport GetBurgers from '../actions/getBurgers';\nimport CreateBurger from '../actions/createBurger';\nimport LoginUser from './LoginUser'\nimport Logout from './Logout'\n\n\n\nclass App extends React.Component {\n \n\n  state = {\n    burgers: [],\n    order: {}\n  };\n\n\n  addBurger = burger => {\n    // CreateBurger.postBurger(burger).then(burger => console.log(\"Created Burger\", burger))\n    CreateBurger.postBurger(burger).then(burger => this.setState({\n      burgers: this.state.burgers.concat(burger)\n    }))\n  }\n\n  // deleteBurger = (key) => {\n  //   const burgers = { ...this.state.burgers };\n\n  //   delete burgers[key]\n  \n  // };\n\n\n\n  addToOrder = (key) => {\n    // make a  copy of a state object \n    const order = {...this.state.order}\n    // add a key to an order with 1 , or reshresh current state of an order\n    order[key] = order[key] + 1 || 1;\n    // add new order object to state of an order \n    this.setState({ order: order })\n\n  };\n  \n\n  deleteFromOrder = key => {\n    const order = { ...this.state.order };\n    delete order[key]\n    this.setState({ order: order })\n    // this.setState( { order });\n  };\n\n  updateBurger = (id, updatedBurger) => {\n    const burgers = this.state.burgers.map(burger => { \n      return burger.id == updatedBurger.id ? updatedBurger : burger\n      \n    })\n    // console.log(updatedBurger)\n    this.setState({ burgers })\n  }\n  \n\n \n\n\n \n  componentDidMount() {\n     GetBurgers.fetchBurgers()\n     .then(burgers => this.setState({ burgers }))\n  }\n\n\n  render() {\n    return (\n    \n        <div className='burger-paradise'>\n          \n          <div className='menu'>\n          \n            <Header title='Hot Burgers' />\n          \n            \n            <ul className='burgers'>\n              {this.state.burgers.map(burger => {\n                return <Burger \n                  key={burger.id}\n                  index={burger.id}\n                  name={burger.name}\n                  price={burger.price}\n                  description={burger.description}\n                  status={burger.status}\n                  image={burger.image}\n                  addToOrder={this.addToOrder}\n                 />;\n              })}\n            </ul>\n            \n          </div>\n          <Order \n            deleteFromOrder={this.deleteFromOrder}\n            burgers={this.state.burgers} \n            order={this.state.order}\n          />\n          <LoginUser>\n            <MenuAdmin \n            \n              addBurger={this.addBurger}\n              \n              burgers={this.state.burgers}\n              updateBurger={this.updateBurger}\n            \n            /> \n       \n       </LoginUser>\n        </div>\n        \n    );\n  }\n}\n\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => {\n  return(\n    <div>\n      <h2>Life is not fun without BURGERs</h2>\n    </div>\n  )\n}\n\nexport default NotFound;","\nimport React from 'react';\nimport Landing from './Landing';\nimport App from './App';\nimport NotFound from './NotFound';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LoginUser from './LoginUser';\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={Landing}  />\n        \n        <Route path ='/restaurant/:restaurantId' component={App}/>\n        <Route component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;","const initialState = {\n  username: \"\",\n  password: \"\"\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE_LOGIN_FORM\":\n      return action.formData\n    case \"RESET_LOGIN_FORM\":\n      return initialState\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport usersReducer from './reducers/users.js';\nimport currentUser from './reducers/currentUser.js';\nimport loginForm from './reducers/loginForm.js';\nimport thunk  from 'redux-thunk';\n\nconst reducer = combineReducers({\n  users: usersReducer,\n  currentUser, //different syntax than line 8\n  loginForm\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)))\n\nexport default store ","export default (state = [], action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}","export default (state = null, action) => {\n  switch (action.type) {\n    case \"SET_CURRENT_USER\":\n      return action.user\n    case \"CLEAR_CURRENT_USER\":\n      return null\n    default:\n      return state\n  }\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport { Provider } from 'react-redux';\nimport './css/style.css';\nimport store from './store';\n\n\n\n\nrender(<Provider store={store}><Router/></Provider>, document.querySelector('#root'));\n\n\n"],"sourceRoot":""}